services:
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: test
      ENVIRONMENT: docker
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./scripts/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - kart-challenge-network

  kart-challenge:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: kart-challenge
    image: kart-challenge:latest
    depends_on:
      - postgres
      - jaeger
    ports:
      - "8080:8080"
    entrypoint: ["./kart-challenge", "--config", "/mnt/config/config.$ENVIRONMENT.yaml"]
    networks:
      - kart-challenge-network
    volumes:
      - ./promocodes:/mnt/promocodes
      - ./db:/mnt/db
      - ./config:/mnt/config
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 1m
      timeout: 3s
      retries: 5
      start_period: 30s

  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    hostname: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_OTLP_HTTP_PORT: 4318
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 5778:5778
      - 9411:9411
    networks:
      - kart-challenge-network

  redis:
    image: redis:7
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kart-challenge-network
    deploy:
      resources:
        limits:
          cpus: "4.0"     # limit container to 2 CPU cores
          memory: 8g      # max 4GB memory
        reservations:
          cpus: "2.0"     # guarantee at least 1 CPU
          memory: 4g      # guarantee 2GB RAM
    command: [
      "redis-server",
      "--save", "60", "1000",       # snapshot every 60s if 1000 writes
      "--appendonly", "yes",        # durable logging
      "--maxmemory", "4gb",         # limit in-RAM usage
      "--maxmemory-policy", "allkeys-lru" # eviction policy
    ]
  redisUi:
    image: redis/redisinsight:latest
    container_name: redisui
    hostname: redisui
    ports:
      - "5540:5540"
    networks:
      - kart-challenge-network

networks:
    kart-challenge-network:
        driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
